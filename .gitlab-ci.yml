# ros-dpkg/.gitlab-ci.yml

image: docker:stable

services:
  - docker:dind

variables:
  # https://docs.gitlab.com/ee/ci/variables/predefined_variables.html
  VCS_URL: "${CI_PROJECT_URL}"
  VCS_REF: "${CI_COMMIT_SHA}"
  SOURCE_DATE: "${CI_COMMIT_TIMESTAMP}"
  BUILD_CODE: "${CI_JOB_ID}"
  DOCKER_REPO: "${CI_REGISTRY_IMAGE}"
  DOCKER_TAG: "${CI_COMMIT_REF_NAME}"
  # https://docs.gitlab.com/ee/ci/git_submodules.html#using-git-submodules-in-your-ci-jobs
  # https://docs.gitlab.com/ee/ci/yaml/README.html#git-submodule-strategy
  GIT_SUBMODULE_STRATEGY: "recursive"

stages:
  - build

build-push:
  stage: build
  tags:
    - docker
  script:
    - |
        set -euvx
        if [ "master" = "${CI_COMMIT_REF_NAME}" ]; then
            export DOCKER_TAG=latest
        fi
    - export
    - docker info
    - apk add -U git
    - ./hooks/build
    - |
        set -euvx
        DISTRIBUTION="$(
            docker container run --rm -i "${DOCKER_REPO}:${DOCKER_TAG}" sh <<'EOF'
        . /etc/os-release
        echo "${VERSION_CODENAME}"
        EOF
        )"
        export DISTRIBUTION
    - |
        set -euvx
        docker login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" "${CI_REGISTRY}"
        docker image push "${DOCKER_REPO}:${DOCKER_TAG}"
        if ! [ "latest" = "${DOCKER_TAG}" ]; then
            docker image tag "${DOCKER_REPO}:${DOCKER_TAG}" "${DOCKER_REPO}:${DISTRIBUTION}"
            docker image push "${DOCKER_REPO}:${DISTRIBUTION}"
        fi
